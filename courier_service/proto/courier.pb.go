// Code generated by protoc-gen-go. DO NOT EDIT.
// source: courier_service/proto/courier.proto

package courier

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Courier struct {
	CourierId            string   `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,3,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	Available            bool     `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	OrderId              []string `protobuf:"bytes,6,rep,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Courier) Reset()         { *m = Courier{} }
func (m *Courier) String() string { return proto.CompactTextString(m) }
func (*Courier) ProtoMessage()    {}
func (*Courier) Descriptor() ([]byte, []int) {
	return fileDescriptor_35cd98328ce879b4, []int{0}
}

func (m *Courier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Courier.Unmarshal(m, b)
}
func (m *Courier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Courier.Marshal(b, m, deterministic)
}
func (m *Courier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Courier.Merge(m, src)
}
func (m *Courier) XXX_Size() int {
	return xxx_messageInfo_Courier.Size(m)
}
func (m *Courier) XXX_DiscardUnknown() {
	xxx_messageInfo_Courier.DiscardUnknown(m)
}

var xxx_messageInfo_Courier proto.InternalMessageInfo

func (m *Courier) GetCourierId() string {
	if m != nil {
		return m.CourierId
	}
	return ""
}

func (m *Courier) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Courier) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

func (m *Courier) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Courier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Courier) GetOrderId() []string {
	if m != nil {
		return m.OrderId
	}
	return nil
}

type Request struct {
	Quantity             int32    `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Weight               int32    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	OrderId              string   `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_35cd98328ce879b4, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Request) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Request) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ShowRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowRequest) Reset()         { *m = ShowRequest{} }
func (m *ShowRequest) String() string { return proto.CompactTextString(m) }
func (*ShowRequest) ProtoMessage()    {}
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_35cd98328ce879b4, []int{2}
}

func (m *ShowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowRequest.Unmarshal(m, b)
}
func (m *ShowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowRequest.Marshal(b, m, deterministic)
}
func (m *ShowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowRequest.Merge(m, src)
}
func (m *ShowRequest) XXX_Size() int {
	return xxx_messageInfo_ShowRequest.Size(m)
}
func (m *ShowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowRequest proto.InternalMessageInfo

type Result struct {
	Couriers             []*Courier `protobuf:"bytes,1,rep,name=couriers,proto3" json:"couriers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_35cd98328ce879b4, []int{3}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCouriers() []*Courier {
	if m != nil {
		return m.Couriers
	}
	return nil
}

type Response struct {
	Dispatched           bool     `protobuf:"varint,1,opt,name=dispatched,proto3" json:"dispatched,omitempty"`
	Courier              *Courier `protobuf:"bytes,2,opt,name=courier,proto3" json:"courier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_35cd98328ce879b4, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetDispatched() bool {
	if m != nil {
		return m.Dispatched
	}
	return false
}

func (m *Response) GetCourier() *Courier {
	if m != nil {
		return m.Courier
	}
	return nil
}

func init() {
	proto.RegisterType((*Courier)(nil), "courier.Courier")
	proto.RegisterType((*Request)(nil), "courier.Request")
	proto.RegisterType((*ShowRequest)(nil), "courier.ShowRequest")
	proto.RegisterType((*Result)(nil), "courier.Result")
	proto.RegisterType((*Response)(nil), "courier.Response")
}

func init() {
	proto.RegisterFile("courier_service/proto/courier.proto", fileDescriptor_35cd98328ce879b4)
}

var fileDescriptor_35cd98328ce879b4 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5f, 0x4b, 0xf3, 0x30,
	0x14, 0xc6, 0xd7, 0xb7, 0x5b, 0xff, 0x9c, 0xf1, 0xbe, 0xaf, 0x1e, 0x44, 0xea, 0x50, 0x29, 0xf5,
	0xa6, 0x88, 0x6c, 0x38, 0xc1, 0x7b, 0xd1, 0x9b, 0xdd, 0x66, 0xa0, 0xde, 0x8d, 0xac, 0x0d, 0x2e,
	0xd0, 0xad, 0x5d, 0x93, 0x6e, 0xf3, 0x5b, 0xf9, 0x11, 0xa5, 0x49, 0xda, 0x55, 0xf0, 0x2e, 0xcf,
	0x93, 0x9c, 0x27, 0xbf, 0x9c, 0x13, 0xb8, 0x49, 0xf2, 0xaa, 0xe4, 0xac, 0x5c, 0x08, 0x56, 0xee,
	0x78, 0xc2, 0x26, 0x45, 0x99, 0xcb, 0x7c, 0x62, 0xdc, 0xb1, 0x52, 0xe8, 0x1a, 0x19, 0x7d, 0x59,
	0xe0, 0x3e, 0xeb, 0x35, 0x5e, 0x01, 0x34, 0xb5, 0x3c, 0x0d, 0xac, 0xd0, 0x8a, 0x7d, 0xe2, 0x1b,
	0x67, 0x96, 0xe2, 0x08, 0xbc, 0x84, 0x16, 0x34, 0xe1, 0xf2, 0x33, 0xf8, 0x13, 0x5a, 0xf1, 0x80,
	0xb4, 0xba, 0x2e, 0x5d, 0xd3, 0xc3, 0x62, 0xcf, 0xf8, 0xc7, 0x4a, 0x06, 0xb6, 0xda, 0xf5, 0xd7,
	0xf4, 0xf0, 0xa6, 0x0c, 0xbc, 0x04, 0x9f, 0xee, 0x28, 0xcf, 0xe8, 0x32, 0x63, 0x41, 0x3f, 0xb4,
	0x62, 0x8f, 0x1c, 0x0d, 0x44, 0xe8, 0x6f, 0xe8, 0x9a, 0x05, 0x03, 0x75, 0xa3, 0x5a, 0xe3, 0x05,
	0x78, 0x79, 0x99, 0x6a, 0x12, 0x27, 0xb4, 0x63, 0x9f, 0xb8, 0x4a, 0xcf, 0xd2, 0xe8, 0x1d, 0x5c,
	0xc2, 0xb6, 0x15, 0x13, 0xb2, 0x46, 0xda, 0x56, 0x74, 0x23, 0x6b, 0x24, 0x4b, 0x23, 0x35, 0x1a,
	0xcf, 0xc1, 0x31, 0x38, 0x1a, 0xd6, 0xa8, 0x1f, 0xc9, 0xb6, 0xba, 0xb1, 0x4d, 0xfe, 0x0b, 0xc3,
	0xf9, 0x2a, 0xdf, 0x9b, 0xf4, 0xe8, 0x11, 0x1c, 0xc2, 0x44, 0x95, 0x49, 0xbc, 0x03, 0xcf, 0xf4,
	0x41, 0x04, 0x56, 0x68, 0xc7, 0xc3, 0xe9, 0xc9, 0xb8, 0x69, 0xa8, 0xe9, 0x1e, 0x69, 0x4f, 0x44,
	0xaf, 0xe0, 0x11, 0x26, 0x8a, 0x7c, 0x23, 0x18, 0x5e, 0x03, 0xa4, 0x5c, 0x14, 0x54, 0x26, 0x2b,
	0xa6, 0x7b, 0xea, 0x91, 0x8e, 0x83, 0xb7, 0xd0, 0x8c, 0x42, 0x61, 0xfe, 0x16, 0xdc, 0x1c, 0x98,
	0xee, 0xe1, 0x9f, 0xf1, 0xe6, 0x7a, 0xb4, 0x78, 0x0f, 0xde, 0x8b, 0xc9, 0xc2, 0x63, 0xa1, 0xe1,
	0x1f, 0x9d, 0x76, 0x1c, 0x8d, 0x13, 0xf5, 0x70, 0x0a, 0x6e, 0xfd, 0xc6, 0xa7, 0x2c, 0xc3, 0xb3,
	0x76, 0xbf, 0xf3, 0xea, 0xd1, 0xff, 0x6e, 0x55, 0x95, 0xc9, 0xa8, 0xb7, 0x74, 0xd4, 0xa7, 0x79,
	0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x95, 0xde, 0xbe, 0x5b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for CourierService service

type CourierServiceClient interface {
	Dispatch(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	ShowAll(ctx context.Context, in *ShowRequest, opts ...client.CallOption) (*Result, error)
}

type courierServiceClient struct {
	c           client.Client
	serviceName string
}

func NewCourierServiceClient(serviceName string, c client.Client) CourierServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "courier"
	}
	return &courierServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *courierServiceClient) Dispatch(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "CourierService.Dispatch", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) ShowAll(ctx context.Context, in *ShowRequest, opts ...client.CallOption) (*Result, error) {
	req := c.c.NewRequest(c.serviceName, "CourierService.ShowAll", in)
	out := new(Result)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CourierService service

type CourierServiceHandler interface {
	Dispatch(context.Context, *Request, *Response) error
	ShowAll(context.Context, *ShowRequest, *Result) error
}

func RegisterCourierServiceHandler(s server.Server, hdlr CourierServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&CourierService{hdlr}, opts...))
}

type CourierService struct {
	CourierServiceHandler
}

func (h *CourierService) Dispatch(ctx context.Context, in *Request, out *Response) error {
	return h.CourierServiceHandler.Dispatch(ctx, in, out)
}

func (h *CourierService) ShowAll(ctx context.Context, in *ShowRequest, out *Result) error {
	return h.CourierServiceHandler.ShowAll(ctx, in, out)
}
